// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// SetSize
void SetSize(int size);
RcppExport SEXP _TakuzuMickaelLoikPackage_SetSize(SEXP sizeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    SetSize(size);
    return R_NilValue;
END_RCPP
}
// GetSize
int GetSize();
RcppExport SEXP _TakuzuMickaelLoikPackage_GetSize() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetSize());
    return rcpp_result_gen;
END_RCPP
}
// mainGenerate
void mainGenerate();
RcppExport SEXP _TakuzuMickaelLoikPackage_mainGenerate() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    mainGenerate();
    return R_NilValue;
END_RCPP
}
// GetCaseValue
int GetCaseValue(int i, int j);
RcppExport SEXP _TakuzuMickaelLoikPackage_GetCaseValue(SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(GetCaseValue(i, j));
    return rcpp_result_gen;
END_RCPP
}
// GetHiddenCaseValue
int GetHiddenCaseValue(int i, int j);
RcppExport SEXP _TakuzuMickaelLoikPackage_GetHiddenCaseValue(SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(GetHiddenCaseValue(i, j));
    return rcpp_result_gen;
END_RCPP
}
// PlayerChangeValue
void PlayerChangeValue(int i, int j);
RcppExport SEXP _TakuzuMickaelLoikPackage_PlayerChangeValue(SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    PlayerChangeValue(i, j);
    return R_NilValue;
END_RCPP
}
// CheckVictory
bool CheckVictory();
RcppExport SEXP _TakuzuMickaelLoikPackage_CheckVictory() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CheckVictory());
    return rcpp_result_gen;
END_RCPP
}
// GetErrorCells
Rcpp::List GetErrorCells();
RcppExport SEXP _TakuzuMickaelLoikPackage_GetErrorCells() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetErrorCells());
    return rcpp_result_gen;
END_RCPP
}
// HelpPlayer
void HelpPlayer(int iteration);
RcppExport SEXP _TakuzuMickaelLoikPackage_HelpPlayer(SEXP iterationSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iteration(iterationSEXP);
    HelpPlayer(iteration);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TakuzuMickaelLoikPackage_SetSize", (DL_FUNC) &_TakuzuMickaelLoikPackage_SetSize, 1},
    {"_TakuzuMickaelLoikPackage_GetSize", (DL_FUNC) &_TakuzuMickaelLoikPackage_GetSize, 0},
    {"_TakuzuMickaelLoikPackage_mainGenerate", (DL_FUNC) &_TakuzuMickaelLoikPackage_mainGenerate, 0},
    {"_TakuzuMickaelLoikPackage_GetCaseValue", (DL_FUNC) &_TakuzuMickaelLoikPackage_GetCaseValue, 2},
    {"_TakuzuMickaelLoikPackage_GetHiddenCaseValue", (DL_FUNC) &_TakuzuMickaelLoikPackage_GetHiddenCaseValue, 2},
    {"_TakuzuMickaelLoikPackage_PlayerChangeValue", (DL_FUNC) &_TakuzuMickaelLoikPackage_PlayerChangeValue, 2},
    {"_TakuzuMickaelLoikPackage_CheckVictory", (DL_FUNC) &_TakuzuMickaelLoikPackage_CheckVictory, 0},
    {"_TakuzuMickaelLoikPackage_GetErrorCells", (DL_FUNC) &_TakuzuMickaelLoikPackage_GetErrorCells, 0},
    {"_TakuzuMickaelLoikPackage_HelpPlayer", (DL_FUNC) &_TakuzuMickaelLoikPackage_HelpPlayer, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_TakuzuMickaelLoikPackage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
